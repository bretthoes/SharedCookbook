name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup .NET 9.0.100 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.100

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14
        with:
          useConfigFile: true
          configFilePath: .github/GitVersion.yml
          verbosity: Quiet

      - name: Show GitVersion info
        run: |
          echo "FullSemVer      = ${{ steps.gitversion.outputs.FullSemVer }}"
          echo "SemVer          = ${{ steps.gitversion.outputs.SemVer }}"
          echo "AssemblySemVer  = ${{ steps.gitversion.outputs.AssemblySemVer }}"
          echo "NuGetVersionV2  = ${{ steps.gitversion.outputs.NuGetVersionV2 }}"

      - name: Tag commit with version
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          SEMVER: ${{ steps.gitversion.outputs.SemVer }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v$SEMVER
          git push origin v$SEMVER

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build solution (skip NSwag)
        run: |
          dotnet build --no-restore -c Release \
            /p:Version=${{ steps.gitversion.outputs.FullSemVer }} \
            /p:AssemblyVersion=${{ steps.gitversion.outputs.AssemblySemVer }} \
            /p:FileVersion=${{ steps.gitversion.outputs.AssemblySemVer }} \
            -p:SkipNSwag=true

      - name: Run tests (skip NSwag)
        run: |
          dotnet test --no-build -c Release \
            /p:Version=${{ steps.gitversion.outputs.FullSemVer }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          body: |
            Release ${{ github.ref_name }}:
            - (add your changelog or notes here)
