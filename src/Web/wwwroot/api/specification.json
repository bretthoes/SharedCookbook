{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "SharedCookbook API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Cookbooks": {
      "get": {
        "tags": [
          "Cookbooks"
        ],
        "operationId": "GetCookbooksWithPagination",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfCookbookBriefDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Cookbooks"
        ],
        "operationId": "CreateCookbook",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCookbookCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Cookbooks/{id}": {
      "put": {
        "tags": [
          "Cookbooks"
        ],
        "operationId": "UpdateCookbook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCookbookCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cookbooks"
        ],
        "operationId": "DeleteCookbook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Images": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "CreateImages",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "nullable": true,
                    "items": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Invitations/preview": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "operationId": "GetInvitationPreview",
        "parameters": [
          {
            "name": "Token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Invitations": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "operationId": "GetInvitationsWithPagination",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CookbookInvitationStatus"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfInvitationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Invitations"
        ],
        "operationId": "CreateInvitation",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Invitations/{id}": {
      "put": {
        "tags": [
          "Invitations"
        ],
        "operationId": "UpdateInvitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvitationCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Invitations"
        ],
        "operationId": "DeleteInvitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/InvitationTokens": {
      "post": {
        "tags": [
          "InvitationTokens"
        ],
        "operationId": "CreateInvitationToken",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationTokenCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Memberships/{id}": {
      "get": {
        "tags": [
          "Memberships"
        ],
        "operationId": "GetMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Memberships"
        ],
        "operationId": "UpdateMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMembershipCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Memberships"
        ],
        "operationId": "DeleteMembership",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Memberships/by-cookbook/{cookbookId}": {
      "get": {
        "tags": [
          "Memberships"
        ],
        "operationId": "GetMembershipByCookbook",
        "parameters": [
          {
            "name": "cookbookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Memberships": {
      "get": {
        "tags": [
          "Memberships"
        ],
        "operationId": "GetMembershipsWithPagination",
        "parameters": [
          {
            "name": "CookbookId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfMembershipDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Recipes/{Id}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "operationId": "GetRecipe",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipeDetailedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "operationId": "GetRecipesWithPagination",
        "parameters": [
          {
            "name": "CookbookId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfRecipeDetailedDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "operationId": "CreateRecipe",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecipeCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Recipes/{id}": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "operationId": "UpdateRecipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecipeCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "operationId": "DeleteRecipe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Recipes/parse-recipe-url": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "operationId": "ParseRecipeFromUrl",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParseRecipeFromUrlCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRecipeDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Recipes/parse-recipe-img": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "operationId": "ParseRecipeFromImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRecipeDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/update": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "UpdateUser",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/display-name": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetDisplayName",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRegister",
        "requestBody": {
          "x-name": "registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/manage/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersManageInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PaginatedListOfCookbookBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CookbookBriefDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CookbookBriefDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "authorEmail": {
            "type": "string",
            "nullable": true
          },
          "membersCount": {
            "type": "integer",
            "format": "int32"
          },
          "recipeCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCookbookCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateCookbookCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvitationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "senderEmail": {
            "type": "string",
            "nullable": true
          },
          "cookbookTitle": {
            "type": "string"
          },
          "cookbookImage": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedListOfInvitationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CookbookInvitationStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Sent",
          "Accepted",
          "Rejected"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "CreateInvitationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cookbookId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "UpdateInvitationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "newStatus": {
            "$ref": "#/components/schemas/CookbookInvitationStatus"
          }
        }
      },
      "CreateInvitationTokenCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cookbookId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MembershipDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isCreator": {
            "type": "boolean"
          },
          "canAddRecipe": {
            "type": "boolean"
          },
          "canUpdateRecipe": {
            "type": "boolean"
          },
          "canDeleteRecipe": {
            "type": "boolean"
          },
          "canSendInvite": {
            "type": "boolean"
          },
          "canRemoveMember": {
            "type": "boolean"
          },
          "canEditCookbookDetails": {
            "type": "boolean"
          }
        }
      },
      "PaginatedListOfMembershipDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MembershipDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "UpdateMembershipCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isCreator": {
            "type": "boolean"
          },
          "canAddRecipe": {
            "type": "boolean"
          },
          "canUpdateRecipe": {
            "type": "boolean"
          },
          "canDeleteRecipe": {
            "type": "boolean"
          },
          "canSendInvite": {
            "type": "boolean"
          },
          "canRemoveMember": {
            "type": "boolean"
          },
          "canEditCookbookDetails": {
            "type": "boolean"
          }
        }
      },
      "RecipeDetailedDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "authorEmail": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "videoPath": {
            "type": "string",
            "nullable": true
          },
          "preparationTimeInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cookingTimeInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bakingTimeInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "servings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVegetarian": {
            "type": "boolean",
            "nullable": true
          },
          "isVegan": {
            "type": "boolean",
            "nullable": true
          },
          "isGlutenFree": {
            "type": "boolean",
            "nullable": true
          },
          "isDairyFree": {
            "type": "boolean",
            "nullable": true
          },
          "isHealthy": {
            "type": "boolean",
            "nullable": true
          },
          "isCheap": {
            "type": "boolean",
            "nullable": true
          },
          "isLowFodmap": {
            "type": "boolean",
            "nullable": true
          },
          "directions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeDirection"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeImage"
            }
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeIngredient"
            }
          }
        }
      },
      "RecipeDirection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "recipeId": {
                "type": "integer",
                "format": "int32"
              },
              "text": {
                "type": "string"
              },
              "ordinal": {
                "type": "integer",
                "format": "int32"
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseAuditableEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "createdBy": {
                "type": "string",
                "nullable": true
              },
              "lastModified": {
                "type": "string",
                "format": "date-time"
              },
              "lastModifiedBy": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "domainEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseEvent"
            }
          }
        }
      },
      "BaseEvent": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "RecipeImage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "recipeId": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              },
              "ordinal": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "RecipeIngredient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "recipeId": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              },
              "ordinal": {
                "type": "integer",
                "format": "int32"
              },
              "optional": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "PaginatedListOfRecipeDetailedDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecipeDetailedDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "CreateRecipeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recipe": {
            "$ref": "#/components/schemas/CreateRecipeDto"
          }
        }
      },
      "CreateRecipeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "cookbookId": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "videoPath": {
            "type": "string",
            "nullable": true
          },
          "preparationTimeInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cookingTimeInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bakingTimeInMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "servings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "directions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecipeDirectionDto"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecipeImageDto"
            }
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecipeIngredientDto"
            }
          }
        }
      },
      "CreateRecipeDirectionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateRecipeImageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateRecipeIngredientDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateRecipeCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recipe": {
            "$ref": "#/components/schemas/Recipe"
          }
        }
      },
      "Recipe": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cookbookId": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string",
                "nullable": true
              },
              "thumbnail": {
                "type": "string",
                "nullable": true
              },
              "videoPath": {
                "type": "string",
                "nullable": true
              },
              "preparationTimeInMinutes": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "cookingTimeInMinutes": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "bakingTimeInMinutes": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "servings": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "isVegetarian": {
                "type": "boolean",
                "nullable": true
              },
              "isVegan": {
                "type": "boolean",
                "nullable": true
              },
              "isGlutenFree": {
                "type": "boolean",
                "nullable": true
              },
              "isDairyFree": {
                "type": "boolean",
                "nullable": true
              },
              "isHealthy": {
                "type": "boolean",
                "nullable": true
              },
              "isCheap": {
                "type": "boolean",
                "nullable": true
              },
              "isLowFodmap": {
                "type": "boolean",
                "nullable": true
              },
              "cookbook": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Cookbook"
                  }
                ]
              },
              "nutrition": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RecipeNutrition"
                  }
                ]
              },
              "cookbookNotifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CookbookNotification"
                }
              },
              "ingredientCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IngredientCategory"
                }
              },
              "directions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecipeDirection"
                }
              },
              "ingredients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecipeIngredient"
                }
              },
              "images": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecipeImage"
                }
              }
            }
          }
        ]
      },
      "Cookbook": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string",
                "nullable": true
              },
              "invitations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CookbookInvitation"
                }
              },
              "memberships": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CookbookMembership"
                }
              },
              "notifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CookbookNotification"
                }
              },
              "recipes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipe"
                }
              }
            }
          }
        ]
      },
      "CookbookInvitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cookbookId": {
                "type": "integer",
                "format": "int32"
              },
              "recipientPersonId": {
                "type": "string",
                "nullable": true
              },
              "invitationStatus": {
                "$ref": "#/components/schemas/CookbookInvitationStatus"
              },
              "responseDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "cookbook": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Cookbook"
                  }
                ]
              },
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvitationToken"
                }
              }
            }
          }
        ]
      },
      "InvitationToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cookbookInvitationId": {
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "$ref": "#/components/schemas/InvitationTokenStatus"
              },
              "digest": {
                "$ref": "#/components/schemas/TokenDigest"
              },
              "invitation": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CookbookInvitation"
                  }
                ]
              },
              "isActive": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "InvitationTokenStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Active",
          "Consumed",
          "Revoked"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "TokenDigest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ValueObject"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "hash": {
                "type": "string",
                "format": "byte"
              },
              "salt": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ]
      },
      "ValueObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "CookbookMembership": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cookbookId": {
                "type": "integer",
                "format": "int32"
              },
              "isCreator": {
                "type": "boolean"
              },
              "canAddRecipe": {
                "type": "boolean"
              },
              "canUpdateRecipe": {
                "type": "boolean"
              },
              "canDeleteRecipe": {
                "type": "boolean"
              },
              "canSendInvite": {
                "type": "boolean"
              },
              "canRemoveMember": {
                "type": "boolean"
              },
              "canEditCookbookDetails": {
                "type": "boolean"
              },
              "cookbook": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Cookbook"
                  }
                ]
              }
            }
          }
        ]
      },
      "CookbookNotification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cookbookId": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "recipeId": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "actionType": {
                "$ref": "#/components/schemas/CookbookNotificationActionType"
              },
              "cookbook": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Cookbook"
                  }
                ]
              },
              "recipe": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Recipe"
                  }
                ]
              }
            }
          }
        ]
      },
      "CookbookNotificationActionType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Like",
          "Comment",
          "Share",
          "Invite",
          "Update",
          "NewRecipe"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "RecipeNutrition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "recipeId": {
                "type": "integer",
                "format": "int32"
              },
              "calories": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "protein": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "fat": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "carbohydrates": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "sugar": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "fiber": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "sodium": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "IngredientCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "title": {
                "type": "string"
              },
              "recipeId": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ParseRecipeFromUrlCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "UpdateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "displayName": {
            "type": "string"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}